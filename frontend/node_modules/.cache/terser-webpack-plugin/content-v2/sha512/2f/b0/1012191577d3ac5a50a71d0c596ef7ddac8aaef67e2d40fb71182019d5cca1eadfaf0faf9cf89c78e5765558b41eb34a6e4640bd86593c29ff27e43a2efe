{"map":"{\"version\":3,\"sources\":[\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Register.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Login.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/DeleteTodo.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Todo.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/AddTodo.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/UpdateTodo.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Dashboard.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/App.js\",\"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/index.js\"],\"names\":[\"Register\",\"username\",\"setUsername\",\"useState\",\"email\",\"setEmail\",\"password\",\"setPassword\",\"firstName\",\"setFirstName\",\"lastName\",\"setLastName\",\"navigate\",\"useNavigate\",\"React\",\"createElement\",\"className\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"response\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"data\",\"json\",\"ok\",\"console\",\"log\",\"alert\",\"error\",\"message\",\"type\",\"value\",\"onChange\",\"target\",\"required\",\"onClick\",\"Login\",\"localStorage\",\"setItem\",\"DeleteTodo\",\"_ref\",\"id\",\"Authorization\",\"getItem\",\"window\",\"location\",\"reload\",\"TodoList\",\"todos\",\"setTodos\",\"useEffect\",\"fetchTodos\",\"map\",\"todo\",\"key\",\"_id\",\"title\",\"completed\",\"Link\",\"to\",\"handleGoToDashboard\",\"AddTodo\",\"setTitle\",\"userId\",\"UpdateTodo\",\"useParams\",\"setTodo\",\"setError\",\"Error\",\"fetchTodo\",\"style\",\"color\",\"name\",\"[object Object]\",\"checked\",\"Dashboard\",\"handleAddTodoClick\",\"App\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"render\",\"BrowserRouter\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react';\\nimport { useNavigate } from 'react-router-dom';\\nimport './Register.css';\\n\\nconst Register = () => {\\n  const [username, setUsername] = useState('');\\n  const [email, setEmail] = useState('');\\n  const [password, setPassword] = useState('');\\n  const [firstName, setFirstName] = useState('');\\n  const [lastName, setLastName] = useState('');\\n  const navigate = useNavigate();\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    try {\\n      const response = await fetch('https://to-do-list-1-i7w0.onrender.com/api/auth/register', {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ username, email, password, firstName, lastName }),\\n      });\\n      const data = await response.json();\\n      if (response.ok) {\\n        console.log('Registration successful', data);\\n        alert('Registration successful');\\n        navigate('/login');\\n      } else {\\n        console.error('Registration error', data);\\n        alert(data.message || 'Registration failed');\\n      }\\n    } catch (error) {\\n      console.error('Network error', error);\\n      alert('Network error');\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"register-container\\\">\\n      <h2>Register</h2>\\n      <form onSubmit={handleSubmit}>\\n        <div className=\\\"form-group\\\">\\n          <label>Username:</label>\\n          <input\\n            type=\\\"text\\\"\\n            value={username}\\n            onChange={(e) => setUsername(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <div className=\\\"form-group\\\">\\n          <label>Email:</label>\\n          <input\\n            type=\\\"email\\\"\\n            value={email}\\n            onChange={(e) => setEmail(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <div className=\\\"form-group\\\">\\n          <label>Password:</label>\\n          <input\\n            type=\\\"password\\\"\\n            value={password}\\n            onChange={(e) => setPassword(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <div className=\\\"form-group\\\">\\n          <label>First Name:</label>\\n          <input\\n            type=\\\"text\\\"\\n            value={firstName}\\n            onChange={(e) => setFirstName(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <div className=\\\"form-group\\\">\\n          <label>Last Name:</label>\\n          <input\\n            type=\\\"text\\\"\\n            value={lastName}\\n            onChange={(e) => setLastName(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <button type=\\\"submit\\\" className=\\\"submit-button\\\">Register</button>\\n      </form>\\n      <button onClick={() => navigate('/login')} className=\\\"secondary-button\\\">Go to Login</button>\\n    </div>\\n  );\\n};\\n\\nexport default Register;\\n\",\"import React, { useState } from 'react';\\nimport { useNavigate } from 'react-router-dom';\\nimport './Login.css';\\n\\nconst Login = () => {\\n  const [email, setEmail] = useState('');\\n  const [password, setPassword] = useState('');\\n  const navigate = useNavigate();\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    try {\\n      const response = await fetch('https://to-do-list-1-i7w0.onrender.com/api/auth/login', {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ email, password }),\\n      });\\n      const data = await response.json();\\n      if (response.ok) {\\n        console.log('Login successful', data);\\n        localStorage.setItem('user', JSON.stringify(data));\\n        navigate('/todos');\\n      } else {\\n        console.error('Login error', data);\\n        alert(data.message || 'Login failed');\\n      }\\n    } catch (error) {\\n      console.error('Network error', error);\\n      alert('Network error');\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"login-container\\\">\\n      <h2>Login</h2>\\n      <form onSubmit={handleSubmit}>\\n        <div className=\\\"form-group\\\">\\n          <label>Email:</label>\\n          <input\\n            type=\\\"email\\\"\\n            value={email}\\n            onChange={(e) => setEmail(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <div className=\\\"form-group\\\">\\n          <label>Password:</label>\\n          <input\\n            type=\\\"password\\\"\\n            value={password}\\n            onChange={(e) => setPassword(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <button type=\\\"submit\\\" className=\\\"submit-button\\\">Login</button>\\n      </form>\\n      <button onClick={() => navigate('/register')} className=\\\"secondary-button\\\">Go to Register</button>\\n    </div>\\n  );\\n};\\n\\nexport default Login;\\n\",\"import React from 'react';\\n\\nconst DeleteTodo = ({ id }) => {\\n  const handleDelete = async () => {\\n    try {\\n      const response = await fetch(`https://to-do-list-1-i7w0.onrender.com/api/todos/${id}`, {\\n        method: 'DELETE',\\n        headers: {\\n          'Content-Type': 'application/json',\\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\\n        },\\n      });\\n      if (response.ok) {\\n        alert('To-Do deleted successfully');\\n        window.location.reload(); // Refresh the list\\n      } else {\\n        alert('Failed to delete To-Do');\\n      }\\n    } catch (error) {\\n      console.error('Error:', error);\\n    }\\n  };\\n\\n  return (\\n    <button onClick={handleDelete}>Delete</button>\\n  );\\n};\\n\\nexport default DeleteTodo;\\n\",\"import React, { useState, useEffect } from 'react';\\nimport { Link, useNavigate } from 'react-router-dom';\\nimport DeleteTodo from './DeleteTodo';\\nimport './TodoList.css';\\n\\nconst TodoList = () => {\\n  const [todos, setTodos] = useState([]);\\n  const navigate = useNavigate();\\n\\n  useEffect(() => {\\n    const fetchTodos = async () => {\\n      try {\\n        const response = await fetch('https://to-do-list-1-i7w0.onrender.com/api/todos', {\\n          method: 'GET',\\n          headers: {\\n            'Content-Type': 'application/json',\\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\\n          },\\n        });\\n        const data = await response.json();\\n        setTodos(data);\\n      } catch (error) {\\n        console.error('Failed to fetch todos:', error);\\n      }\\n    };\\n\\n    fetchTodos();\\n  }, []);\\n\\n  const handleGoToDashboard = () => {\\n    navigate('/dashboard');\\n  };\\n\\n  return (\\n    <div className=\\\"todo-container\\\">\\n      <h2>My To-Do List</h2>\\n      <ul className=\\\"todo-list\\\">\\n        {todos.map(todo => (\\n          <li key={todo._id} className=\\\"todo-item\\\">\\n            <span className=\\\"todo-title\\\">{todo.title} {todo.completed ? '(Completed)' : ''}</span>\\n            <div className=\\\"todo-actions\\\">\\n              <Link className=\\\"edit-todo-link\\\" to={`/update-todo/${todo._id}`}>Edit</Link>\\n              <DeleteTodo id={todo._id} />\\n            </div>\\n          </li>\\n        ))}\\n      </ul>\\n      <Link className=\\\"add-todo-link\\\" to=\\\"/add-todo\\\">Add New items</Link>\\n      <button className=\\\"dashboard-button\\\" onClick={handleGoToDashboard}>Go to Dashboard</button>\\n    </div>\\n  );\\n};\\n\\nexport default TodoList;\\n\",\"import React, { useState } from 'react';\\nimport { useNavigate } from 'react-router-dom';\\nimport './AddTodo.css';\\n\\nconst AddTodo = () => {\\n  const [title, setTitle] = useState('');\\n  const navigate = useNavigate();\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    try {\\n      const response = await fetch('https://to-do-list-1-i7w0.onrender.com/api/todos', {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\\n        },\\n        body: JSON.stringify({ title, userId: 'userId123' }), // Use actual userId\\n      });\\n      if (response.ok) {\\n        navigate('/todos');\\n      } else {\\n        alert('Failed to add To-Do');\\n      }\\n    } catch (error) {\\n      console.error('Error:', error);\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"addtodo-container\\\">\\n      <h2>Add items</h2>\\n      <form onSubmit={handleSubmit}>\\n        <div className=\\\"form-group\\\">\\n          <label>Title:</label>\\n          <input\\n            type=\\\"text\\\"\\n            value={title}\\n            onChange={(e) => setTitle(e.target.value)}\\n            required\\n            className=\\\"form-input\\\"\\n          />\\n        </div>\\n        <button type=\\\"submit\\\" className=\\\"submit-button\\\">Add</button>\\n      </form>\\n    </div>\\n  );\\n};\\n\\nexport default AddTodo;\\n\",\"import React, { useState, useEffect } from 'react';\\nimport { useParams, useNavigate } from 'react-router-dom';\\n\\nconst UpdateTodo = () => {\\n  const { id } = useParams();\\n  const navigate = useNavigate();\\n  const [todo, setTodo] = useState({ title: '', completed: false });\\n  const [error, setError] = useState('');\\n\\n  useEffect(() => {\\n    const fetchTodo = async () => {\\n      try {\\n        const response = await fetch(`https://to-do-list-1-i7w0.onrender.com/api/todos/${id}`, {\\n          method: 'GET',\\n          headers: {\\n            'Content-Type': 'application/json',\\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\\n          },\\n        });\\n        if (!response.ok) {\\n          throw new Error('Todo not found');\\n        }\\n        const data = await response.json();\\n        setTodo({\\n          title: data.title,\\n          completed: data.completed,\\n        });\\n      } catch (error) {\\n\\n      }\\n    };\\n\\n    fetchTodo();\\n  }, [id]);\\n\\n  const handleInputChange = (e) => {\\n    const { name, value } = e.target;\\n    setTodo({ ...todo, [name]: value });\\n  };\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    try {\\n      const response = await fetch(`https://to-do-list-1-i7w0.onrender.com/api/todos/${id}`, {\\n        method: 'PUT',\\n        headers: {\\n          'Content-Type': 'application/json',\\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\\n        },\\n        body: JSON.stringify(todo),\\n      });\\n      if (!response.ok) {\\n        throw new Error('Failed to update todo');\\n      }\\n      navigate('/todos');\\n    } catch (error) {\\n      console.error('Failed to update todo:', error);\\n      setError('Failed to update todo');\\n    }\\n  };\\n\\n  return (\\n    <div>\\n      <h2>Update To-Do</h2>\\n      {error && <p style={{ color: 'red' }}>{error}</p>}\\n      <form onSubmit={handleSubmit}>\\n        <div>\\n          <label>Re-Edit:</label>\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"title\\\"\\n            value={todo.title}\\n            onChange={handleInputChange}\\n            required\\n          />\\n        </div>\\n        <div>\\n          <label>Completed:</label>\\n          <input\\n            type=\\\"checkbox\\\"\\n            name=\\\"completed\\\"\\n            checked={todo.completed}\\n            onChange={(e) =>\\n              setTodo({ ...todo, completed: e.target.checked })\\n            }\\n          />\\n        </div>\\n        <button type=\\\"submit\\\">Update To-Do</button>\\n      </form>\\n    </div>\\n  );\\n};\\n\\nexport default UpdateTodo;\\n\",\"import React, { useEffect, useState } from 'react';\\nimport { useNavigate } from 'react-router-dom';\\nfunction Dashboard() {\\n  const [todos, setTodos] = useState([]);\\n  const navigate = useNavigate();\\n\\n  const fetchTodos = async () => {\\n    try {\\n      const response = await fetch('https://to-do-list-1-i7w0.onrender.com/api/todos', {\\n        method: 'GET',\\n        headers: {\\n          'Content-Type': 'application/json',\\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\\n        },\\n      });\\n      const data = await response.json();\\n      setTodos(data);\\n    } catch (error) {\\n      console.error('Failed to fetch todos:', error);\\n    }\\n  };\\n\\n  useEffect(() => {\\n    fetchTodos();\\n  }, []);\\n\\n  const handleAddTodoClick = () => {\\n    navigate('/add-todo');\\n  };\\n\\n  return (\\n    <div className=\\\"dashboard-container\\\">\\n      <h1>Dashboard</h1>\\n      <p>Welcome to the dashboard!</p>\\n      <button className=\\\"add-todo-button\\\" onClick={handleAddTodoClick}>Add items</button>\\n      <h2>My To-Do List</h2>\\n      <ul className=\\\"dashboard-todo-list\\\">\\n        {todos.map(todo => (\\n          <li key={todo._id} className=\\\"dashboard-todo-item\\\">\\n            {todo.title} {todo.completed ? '(Completed)' : ''}\\n          </li>\\n        ))}\\n      </ul>\\n    </div>\\n  );\\n}\\n\\nexport default Dashboard;\\n\",\"import React from 'react';\\nimport { Routes, Route } from 'react-router-dom';\\nimport Register from './components/Register';\\nimport Login from './components/Login';\\nimport TodoList from './components/Todo';\\nimport AddTodo from './components/AddTodo';\\nimport UpdateTodo from './components/UpdateTodo';\\nimport Dashboard from './components/Dashboard';\\nimport './App.css';\\n\\nfunction App() {\\n  return (\\n    <Routes>\\n      <Route path=\\\"/register\\\" element={<Register />} />\\n      <Route path=\\\"/login\\\" element={<Login />} />\\n      <Route path=\\\"/todos\\\" element={<TodoList />} />\\n      <Route path=\\\"/add-todo\\\" element={<AddTodo />} />\\n      <Route path=\\\"/update-todo/:id\\\" element={<UpdateTodo />} />\\n      <Route path=\\\"/dashboard\\\" element={<Dashboard />} />\\n    </Routes>\\n  );\\n}\\n\\nexport default App;\\n\\n\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport { BrowserRouter } from 'react-router-dom';\\n\\nReactDOM.render(\\n  <BrowserRouter>\\n    <App />\\n  </BrowserRouter>,\\n  document.getElementById('root')\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(e,t,a){e.exports=a(16)},,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var o=a(0),l=a.n(o),n=a(4),r=a.n(n),c=a(2);a(11);var s=()=>{const[e,t]=Object(o.useState)(\"\"),[a,n]=Object(o.useState)(\"\"),[r,s]=Object(o.useState)(\"\"),[i,m]=Object(o.useState)(\"\"),[d,u]=Object(o.useState)(\"\"),p=Object(c.o)();return l.a.createElement(\"div\",{className:\"register-container\"},l.a.createElement(\"h2\",null,\"Register\"),l.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();try{const t=await fetch(\"https://to-do-list-1-i7w0.onrender.com/api/auth/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:e,email:a,password:r,firstName:i,lastName:d})}),l=await t.json();t.ok?(console.log(\"Registration successful\",l),alert(\"Registration successful\"),p(\"/login\")):(console.error(\"Registration error\",l),alert(l.message||\"Registration failed\"))}catch(o){console.error(\"Network error\",o),alert(\"Network error\")}}},l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Username:\"),l.a.createElement(\"input\",{type:\"text\",value:e,onChange:e=>t(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Email:\"),l.a.createElement(\"input\",{type:\"email\",value:a,onChange:e=>n(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Password:\"),l.a.createElement(\"input\",{type:\"password\",value:r,onChange:e=>s(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"First Name:\"),l.a.createElement(\"input\",{type:\"text\",value:i,onChange:e=>m(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Last Name:\"),l.a.createElement(\"input\",{type:\"text\",value:d,onChange:e=>u(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"button\",{type:\"submit\",className:\"submit-button\"},\"Register\")),l.a.createElement(\"button\",{onClick:()=>p(\"/login\"),className:\"secondary-button\"},\"Go to Login\"))};a(12);var i=()=>{const[e,t]=Object(o.useState)(\"\"),[a,n]=Object(o.useState)(\"\"),r=Object(c.o)();return l.a.createElement(\"div\",{className:\"login-container\"},l.a.createElement(\"h2\",null,\"Login\"),l.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();try{const t=await fetch(\"https://to-do-list-1-i7w0.onrender.com/api/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:e,password:a})}),l=await t.json();t.ok?(console.log(\"Login successful\",l),localStorage.setItem(\"user\",JSON.stringify(l)),r(\"/todos\")):(console.error(\"Login error\",l),alert(l.message||\"Login failed\"))}catch(o){console.error(\"Network error\",o),alert(\"Network error\")}}},l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Email:\"),l.a.createElement(\"input\",{type:\"email\",value:e,onChange:e=>t(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Password:\"),l.a.createElement(\"input\",{type:\"password\",value:a,onChange:e=>n(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"button\",{type:\"submit\",className:\"submit-button\"},\"Login\")),l.a.createElement(\"button\",{onClick:()=>r(\"/register\"),className:\"secondary-button\"},\"Go to Register\"))},m=a(3);var d=e=>{let{id:t}=e;return l.a.createElement(\"button\",{onClick:async()=>{try{(await fetch(`https://to-do-list-1-i7w0.onrender.com/api/todos/${t}`,{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`}})).ok?(alert(\"To-Do deleted successfully\"),window.location.reload()):alert(\"Failed to delete To-Do\")}catch(e){console.error(\"Error:\",e)}}},\"Delete\")};a(13);var u=()=>{const[e,t]=Object(o.useState)([]),a=Object(c.o)();Object(o.useEffect)(()=>{(async()=>{try{const a=await fetch(\"https://to-do-list-1-i7w0.onrender.com/api/todos\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`}}),o=await a.json();t(o)}catch(e){console.error(\"Failed to fetch todos:\",e)}})()},[]);return l.a.createElement(\"div\",{className:\"todo-container\"},l.a.createElement(\"h2\",null,\"My To-Do List\"),l.a.createElement(\"ul\",{className:\"todo-list\"},e.map(e=>l.a.createElement(\"li\",{key:e._id,className:\"todo-item\"},l.a.createElement(\"span\",{className:\"todo-title\"},e.title,\" \",e.completed?\"(Completed)\":\"\"),l.a.createElement(\"div\",{className:\"todo-actions\"},l.a.createElement(m.b,{className:\"edit-todo-link\",to:`/update-todo/${e._id}`},\"Edit\"),l.a.createElement(d,{id:e._id}))))),l.a.createElement(m.b,{className:\"add-todo-link\",to:\"/add-todo\"},\"Add New items\"),l.a.createElement(\"button\",{className:\"dashboard-button\",onClick:()=>{a(\"/dashboard\")}},\"Go to Dashboard\"))};a(14);var p=()=>{const[e,t]=Object(o.useState)(\"\"),a=Object(c.o)();return l.a.createElement(\"div\",{className:\"addtodo-container\"},l.a.createElement(\"h2\",null,\"Add items\"),l.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();try{(await fetch(\"https://to-do-list-1-i7w0.onrender.com/api/todos\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`},body:JSON.stringify({title:e,userId:\"userId123\"})})).ok?a(\"/todos\"):alert(\"Failed to add To-Do\")}catch(o){console.error(\"Error:\",o)}}},l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,\"Title:\"),l.a.createElement(\"input\",{type:\"text\",value:e,onChange:e=>t(e.target.value),required:!0,className:\"form-input\"})),l.a.createElement(\"button\",{type:\"submit\",className:\"submit-button\"},\"Add\")))};var E=()=>{const{id:e}=Object(c.q)(),t=Object(c.o)(),[a,n]=Object(o.useState)({title:\"\",completed:!1}),[r,s]=Object(o.useState)(\"\");Object(o.useEffect)(()=>{(async()=>{try{const t=await fetch(`https://to-do-list-1-i7w0.onrender.com/api/todos/${e}`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`}});if(!t.ok)throw new Error(\"Todo not found\");const a=await t.json();n({title:a.title,completed:a.completed})}catch(r){}})()},[e]);return l.a.createElement(\"div\",null,l.a.createElement(\"h2\",null,\"Update To-Do\"),r&&l.a.createElement(\"p\",{style:{color:\"red\"}},r),l.a.createElement(\"form\",{onSubmit:async o=>{o.preventDefault();try{if(!(await fetch(`https://to-do-list-1-i7w0.onrender.com/api/todos/${e}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`},body:JSON.stringify(a)})).ok)throw new Error(\"Failed to update todo\");t(\"/todos\")}catch(r){console.error(\"Failed to update todo:\",r),s(\"Failed to update todo\")}}},l.a.createElement(\"div\",null,l.a.createElement(\"label\",null,\"Re-Edit:\"),l.a.createElement(\"input\",{type:\"text\",name:\"title\",value:a.title,onChange:e=>{const{name:t,value:o}=e.target;n({...a,[t]:o})},required:!0})),l.a.createElement(\"div\",null,l.a.createElement(\"label\",null,\"Completed:\"),l.a.createElement(\"input\",{type:\"checkbox\",name:\"completed\",checked:a.completed,onChange:e=>n({...a,completed:e.target.checked})})),l.a.createElement(\"button\",{type:\"submit\"},\"Update To-Do\")))};var h=function(){const[e,t]=Object(o.useState)([]),a=Object(c.o)();return Object(o.useEffect)(()=>{(async()=>{try{const a=await fetch(\"https://to-do-list-1-i7w0.onrender.com/api/todos\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`}}),o=await a.json();t(o)}catch(e){console.error(\"Failed to fetch todos:\",e)}})()},[]),l.a.createElement(\"div\",{className:\"dashboard-container\"},l.a.createElement(\"h1\",null,\"Dashboard\"),l.a.createElement(\"p\",null,\"Welcome to the dashboard!\"),l.a.createElement(\"button\",{className:\"add-todo-button\",onClick:()=>{a(\"/add-todo\")}},\"Add items\"),l.a.createElement(\"h2\",null,\"My To-Do List\"),l.a.createElement(\"ul\",{className:\"dashboard-todo-list\"},e.map(e=>l.a.createElement(\"li\",{key:e._id,className:\"dashboard-todo-item\"},e.title,\" \",e.completed?\"(Completed)\":\"\"))))};a(15);var b=function(){return l.a.createElement(c.c,null,l.a.createElement(c.a,{path:\"/register\",element:l.a.createElement(s,null)}),l.a.createElement(c.a,{path:\"/login\",element:l.a.createElement(i,null)}),l.a.createElement(c.a,{path:\"/todos\",element:l.a.createElement(u,null)}),l.a.createElement(c.a,{path:\"/add-todo\",element:l.a.createElement(p,null)}),l.a.createElement(c.a,{path:\"/update-todo/:id\",element:l.a.createElement(E,null)}),l.a.createElement(c.a,{path:\"/dashboard\",element:l.a.createElement(h,null)}))};r.a.render(l.a.createElement(m.a,null,l.a.createElement(b,null)),document.getElementById(\"root\"))}],[[6,1,2]]]);","extractedComments":[]}