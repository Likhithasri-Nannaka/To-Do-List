{"ast":null,"code":"var _jsxFileName = \"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Dashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction Dashboard() {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('http://to-do-list-1-i7w0.onrender.com/api/todos', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Failed to fetch todos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const handleAddTodoClick = () => {\n    navigate('/add-todo');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Welcome to the dashboard!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-todo-button\",\n    onClick: handleAddTodoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Add items\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"My To-Do List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo._id,\n    className: \"dashboard-todo-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, todo.title, \" \", todo.completed ? '(Completed)' : ''))));\n}\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Dashboard","todos","setTodos","navigate","fetchTodos","response","fetch","method","headers","localStorage","getItem","data","json","error","console","handleAddTodoClick","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","todo","key","_id","title","completed"],"sources":["/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction Dashboard() {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('http://to-do-list-1-i7w0.onrender.com/api/todos', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Failed to fetch todos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const handleAddTodoClick = () => {\n    navigate('/add-todo');\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Dashboard</h1>\n      <p>Welcome to the dashboard!</p>\n      <button className=\"add-todo-button\" onClick={handleAddTodoClick}>Add items</button>\n      <h2>My To-Do List</h2>\n      <ul className=\"dashboard-todo-list\">\n        {todos.map(todo => (\n          <li key={todo._id} className=\"dashboard-todo-item\">\n            {todo.title} {todo.completed ? '(Completed)' : ''}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAASA,CAAA,EAAG;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMK,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9B,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCV,QAAQ,CAACS,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/BZ,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;EAED,oBACEP,KAAA,CAAAoB,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC3B,KAAA,CAAAoB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAClB3B,KAAA,CAAAoB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,2BAA4B,CAAC,eAChC3B,KAAA,CAAAoB,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACO,OAAO,EAAET,kBAAmB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eACnF3B,KAAA,CAAAoB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CAAC,eACtB3B,KAAA,CAAAoB,aAAA;IAAIC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChCtB,KAAK,CAACwB,GAAG,CAACC,IAAI,iBACb9B,KAAA,CAAAoB,aAAA;IAAIW,GAAG,EAAED,IAAI,CAACE,GAAI;IAACX,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/CG,IAAI,CAACG,KAAK,EAAC,GAAC,EAACH,IAAI,CAACI,SAAS,GAAG,aAAa,GAAG,EAC7C,CACL,CACC,CACD,CAAC;AAEV;AAEA,eAAe9B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}