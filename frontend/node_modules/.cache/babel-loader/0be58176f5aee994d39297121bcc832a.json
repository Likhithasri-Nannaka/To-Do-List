{"ast":null,"code":"var _jsxFileName = \"/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DeleteTodo from './DeleteTodo';\nimport './TodoList.css';\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://to-do-list-1-i7w0.onrender.com/api/todos', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error('Failed to fetch todos:', error);\n      }\n    };\n    fetchTodos();\n  }, []);\n  const handleGoToDashboard = () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"My To-Do List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo._id,\n    className: \"todo-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, todo.title, \" \", todo.completed ? '(Completed)' : ''), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"edit-todo-link\",\n    to: `/update-todo/${todo._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DeleteTodo, {\n    id: todo._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Link, {\n    className: \"add-todo-link\",\n    to: \"/add-todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Add New items\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dashboard-button\",\n    onClick: handleGoToDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Go to Dashboard\"));\n};\nexport default TodoList;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","DeleteTodo","TodoList","todos","setTodos","navigate","fetchTodos","response","fetch","method","headers","localStorage","getItem","data","json","error","console","handleGoToDashboard","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","key","_id","title","completed","to","id","onClick"],"sources":["/home/saitejanannaka/Automation/TejaProjects/todo-app/frontend/src/components/Todo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DeleteTodo from './DeleteTodo';\nimport './TodoList.css';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://to-do-list-1-i7w0.onrender.com/api/todos', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error('Failed to fetch todos:', error);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleGoToDashboard = () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h2>My To-Do List</h2>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <li key={todo._id} className=\"todo-item\">\n            <span className=\"todo-title\">{todo.title} {todo.completed ? '(Completed)' : ''}</span>\n            <div className=\"todo-actions\">\n              <Link className=\"edit-todo-link\" to={`/update-todo/${todo._id}`}>Edit</Link>\n              <DeleteTodo id={todo._id} />\n            </div>\n          </li>\n        ))}\n      </ul>\n      <Link className=\"add-todo-link\" to=\"/add-todo\">Add New items</Link>\n      <button className=\"dashboard-button\" onClick={handleGoToDashboard}>Go to Dashboard</button>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}