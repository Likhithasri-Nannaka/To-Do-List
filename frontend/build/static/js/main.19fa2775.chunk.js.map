{"version":3,"sources":["components/Register.js","components/Login.js","components/DeleteTodo.js","components/Todo.js","components/AddTodo.js","components/UpdateTodo.js","components/Dashboard.js","App.js","index.js"],"names":["Register","username","setUsername","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","response","fetch","method","headers","Content-Type","body","JSON","stringify","data","json","ok","console","log","alert","error","message","type","value","onChange","target","required","onClick","Login","localStorage","setItem","DeleteTodo","_ref","id","Authorization","getItem","window","location","reload","TodoList","todos","setTodos","useEffect","fetchTodos","map","todo","key","_id","title","completed","Link","to","handleGoToDashboard","AddTodo","setTitle","userId","UpdateTodo","useParams","setTodo","setError","Error","fetchTodo","style","color","name","[object Object]","checked","Dashboard","handleAddTodoClick","App","Routes","Route","path","element","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.19fa2775.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password, firstName, lastName }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Registration successful', data);\n        alert('Registration successful');\n        navigate('/login');\n      } else {\n        console.error('Registration error', data);\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Network error', error);\n      alert('Network error');\n    }\n  };\n\n  return (\n    <div className=\"register-container\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>First Name:</label>\n          <input\n            type=\"text\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Last Name:</label>\n          <input\n            type=\"text\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Register</button>\n      </form>\n      <button onClick={() => navigate('/login')} className=\"secondary-button\">Go to Login</button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Login successful', data);\n        localStorage.setItem('user', JSON.stringify(data));\n        navigate('/todos');\n      } else {\n        console.error('Login error', data);\n        alert(data.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Network error', error);\n      alert('Network error');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Login</button>\n      </form>\n      <button onClick={() => navigate('/register')} className=\"secondary-button\">Go to Register</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst DeleteTodo = ({ id }) => {\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      if (response.ok) {\n        alert('To-Do deleted successfully');\n        window.location.reload(); // Refresh the list\n      } else {\n        alert('Failed to delete To-Do');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <button onClick={handleDelete}>Delete</button>\n  );\n};\n\nexport default DeleteTodo;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DeleteTodo from './DeleteTodo';\nimport './TodoList.css';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/todos', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error('Failed to fetch todos:', error);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleGoToDashboard = () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h2>My To-Do List</h2>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <li key={todo._id} className=\"todo-item\">\n            <span className=\"todo-title\">{todo.title} {todo.completed ? '(Completed)' : ''}</span>\n            <div className=\"todo-actions\">\n              <Link className=\"edit-todo-link\" to={`/update-todo/${todo._id}`}>Edit</Link>\n              <DeleteTodo id={todo._id} />\n            </div>\n          </li>\n        ))}\n      </ul>\n      <Link className=\"add-todo-link\" to=\"/add-todo\">Add New items</Link>\n      <button className=\"dashboard-button\" onClick={handleGoToDashboard}>Go to Dashboard</button>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddTodo.css';\n\nconst AddTodo = () => {\n  const [title, setTitle] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({ title, userId: 'userId123' }), // Use actual userId\n      });\n      if (response.ok) {\n        navigate('/todos');\n      } else {\n        alert('Failed to add To-Do');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"addtodo-container\">\n      <h2>Add items</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Title:</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst UpdateTodo = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [todo, setTodo] = useState({ title: '', completed: false });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchTodo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        if (!response.ok) {\n          throw new Error('Todo not found');\n        }\n        const data = await response.json();\n        setTodo({\n          title: data.title,\n          completed: data.completed,\n        });\n      } catch (error) {\n\n      }\n    };\n\n    fetchTodo();\n  }, [id]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setTodo({ ...todo, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(todo),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update todo');\n      }\n      navigate('/todos');\n    } catch (error) {\n      console.error('Failed to update todo:', error);\n      setError('Failed to update todo');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Update To-Do</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Re-Edit:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={todo.title}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <label>Completed:</label>\n          <input\n            type=\"checkbox\"\n            name=\"completed\"\n            checked={todo.completed}\n            onChange={(e) =>\n              setTodo({ ...todo, completed: e.target.checked })\n            }\n          />\n        </div>\n        <button type=\"submit\">Update To-Do</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateTodo;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction Dashboard() {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Failed to fetch todos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const handleAddTodoClick = () => {\n    navigate('/add-todo');\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Dashboard</h1>\n      <p>Welcome to the dashboard!</p>\n      <button className=\"add-todo-button\" onClick={handleAddTodoClick}>Add items</button>\n      <h2>My To-Do List</h2>\n      <ul className=\"dashboard-todo-list\">\n        {todos.map(todo => (\n          <li key={todo._id} className=\"dashboard-todo-item\">\n            {todo.title} {todo.completed ? '(Completed)' : ''}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport TodoList from './components/Todo';\nimport AddTodo from './components/AddTodo';\nimport UpdateTodo from './components/UpdateTodo';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/register\" element={<Register />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/todos\" element={<TodoList />} />\n      <Route path=\"/add-todo\" element={<AddTodo />} />\n      <Route path=\"/update-todo/:id\" element={<UpdateTodo />} />\n      <Route path=\"/dashboard\" element={<Dashboard />} />\n    </Routes>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}