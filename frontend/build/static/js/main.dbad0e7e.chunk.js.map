{"version":3,"sources":["components/Register.js","components/Login.js","components/DeleteTodo.js","components/Todo.js","components/AddTodo.js","components/UpdateTodo.js","components/Dashboard.js","App.js","index.js"],"names":["Register","username","setUsername","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","navigate","useNavigate","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","alert","error","message","type","value","onChange","target","required","onClick","Login","localStorage","setItem","DeleteTodo","_ref","id","getItem","window","location","reload","TodoList","todos","setTodos","useEffect","fetchTodos","map","todo","title","completed","Link","to","_id","handleGoToDashboard","AddTodo","setTitle","userId","UpdateTodo","useParams","setTodo","setError","Error","fetchTodo","style","color","name","checked","Dashboard","handleAddTodoClick","App","Routes","Route","path","element","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.dbad0e7e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password, firstName, lastName }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Registration successful', data);\n        alert('Registration successful');\n        navigate('/login');\n      } else {\n        console.error('Registration error', data);\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Network error', error);\n      alert('Network error');\n    }\n  };\n\n  return (\n    <div className=\"register-container\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>First Name:</label>\n          <input\n            type=\"text\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Last Name:</label>\n          <input\n            type=\"text\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Register</button>\n      </form>\n      <button onClick={() => navigate('/login')} className=\"secondary-button\">Go to Login</button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Login successful', data);\n        localStorage.setItem('user', JSON.stringify(data));\n        navigate('/todos');\n      } else {\n        console.error('Login error', data);\n        alert(data.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Network error', error);\n      alert('Network error');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Login</button>\n      </form>\n      <button onClick={() => navigate('/register')} className=\"secondary-button\">Go to Register</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst DeleteTodo = ({ id }) => {\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      if (response.ok) {\n        alert('To-Do deleted successfully');\n        window.location.reload(); // Refresh the list\n      } else {\n        alert('Failed to delete To-Do');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <button onClick={handleDelete}>Delete</button>\n  );\n};\n\nexport default DeleteTodo;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DeleteTodo from './DeleteTodo';\nimport './TodoList.css';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/todos', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error('Failed to fetch todos:', error);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleGoToDashboard = () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h2>My To-Do List</h2>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <li key={todo._id} className=\"todo-item\">\n            <span className=\"todo-title\">{todo.title} {todo.completed ? '(Completed)' : ''}</span>\n            <div className=\"todo-actions\">\n              <Link className=\"edit-todo-link\" to={`/update-todo/${todo._id}`}>Edit</Link>\n              <DeleteTodo id={todo._id} />\n            </div>\n          </li>\n        ))}\n      </ul>\n      <Link className=\"add-todo-link\" to=\"/add-todo\">Add New items</Link>\n      <button className=\"dashboard-button\" onClick={handleGoToDashboard}>Go to Dashboard</button>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddTodo.css';\n\nconst AddTodo = () => {\n  const [title, setTitle] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({ title, userId: 'userId123' }), // Use actual userId\n      });\n      if (response.ok) {\n        navigate('/todos');\n      } else {\n        alert('Failed to add To-Do');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"addtodo-container\">\n      <h2>Add items</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Title:</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n            className=\"form-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst UpdateTodo = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [todo, setTodo] = useState({ title: '', completed: false });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchTodo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        if (!response.ok) {\n          throw new Error('Todo not found');\n        }\n        const data = await response.json();\n        setTodo({\n          title: data.title,\n          completed: data.completed,\n        });\n      } catch (error) {\n\n      }\n    };\n\n    fetchTodo();\n  }, [id]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setTodo({ ...todo, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(todo),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update todo');\n      }\n      navigate('/todos');\n    } catch (error) {\n      console.error('Failed to update todo:', error);\n      setError('Failed to update todo');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Update To-Do</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Re-Edit:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={todo.title}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <label>Completed:</label>\n          <input\n            type=\"checkbox\"\n            name=\"completed\"\n            checked={todo.completed}\n            onChange={(e) =>\n              setTodo({ ...todo, completed: e.target.checked })\n            }\n          />\n        </div>\n        <button type=\"submit\">Update To-Do</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateTodo;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction Dashboard() {\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Failed to fetch todos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const handleAddTodoClick = () => {\n    navigate('/add-todo');\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Dashboard</h1>\n      <p>Welcome to the dashboard!</p>\n      <button className=\"add-todo-button\" onClick={handleAddTodoClick}>Add items</button>\n      <h2>My To-Do List</h2>\n      <ul className=\"dashboard-todo-list\">\n        {todos.map(todo => (\n          <li key={todo._id} className=\"dashboard-todo-item\">\n            {todo.title} {todo.completed ? '(Completed)' : ''}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport TodoList from './components/Todo';\nimport AddTodo from './components/AddTodo';\nimport UpdateTodo from './components/UpdateTodo';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/register\" element={<Register />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/todos\" element={<TodoList />} />\n      <Route path=\"/add-todo\" element={<AddTodo />} />\n      <Route path=\"/update-todo/:id\" element={<UpdateTodo />} />\n      <Route path=\"/dashboard\" element={<Dashboard />} />\n    </Routes>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}